// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) // User ID should be String since cuid() returns a string
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
  cartItems Cart[] // Relation to Cart model
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          String   @id @default(cuid()) // Product ID should be String as well
  name        String
  price       Float
  quantity    Int
  description String
  category    String[] // Array of strings to handle multiple categories
  material    String[] // Array of strings for materials
  length      Float? // Optional field for product length
  width       Float? // Optional field for product width
  breadth     Float? // Optional field for product breadth
  images      String[] // Array of image URLs/paths
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      String   @default("inactive")
  cartItems   Cart[] // Relation to Cart model
}

model OTP {
  id        String   @id @default(uuid())
  email     String   @unique
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    String // User ID is now String to match the User model
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // Ensures unique combination of user and product
}
